{"version":3,"sources":["actions/login-actions.jsx","reducers/login-reducer.js","components/commons/styles.jsx","components/commons/Copyright.jsx","utils/utils.js","components/base/SignIn.jsx","components/connected/SignInHOC.jsx","components/base/SignInSuccessful.jsx","components/Main.jsx","serviceWorker.js","index.js"],"names":["CREATE_USER_SUCCEEDED","CREATE_USER_FAILED","ON_FIRSTNAME_BLUR","ON_LASTNAME_BLUR","ON_USERNAME_BLUR","ON_PASSWORD_BLUR","ON_CONFIRMPASSWORD_BLUR","API_BASE_URL","axiosClient","axios","create","baseURL","headers","Content-Type","createNewUser","user","dispatch","post","then","resp","data","type","payload","catch","error","createUserFailed","response","loginReducer","state","action","undefined","statusCode","username","password","firstname","lastname","confirmPassword","errors","errorCount","status","length","map","e","code","message","defaultMessage","field","_objectSpread","firstName","lastName","userName","singInStyles","theme","@global","body","backgroundColor","palette","common","red","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","Copyright","react_default","a","createElement","Typography","variant","color","align","Link","href","Date","getFullYear","containsErrorOnField","indexOf","passwordsMatchError","SignIn","onCreateUser","preventDefault","_this","props","onFirstNameBlur","target","value","onLastNameBlur","onUserNameBlur","onPasswordBlur","onConfirmPasswordBlur","renderRedirect","react_router","to","_this2","this","classes","Container","component","maxWidth","CssBaseline","className","Avatar","LockOutlined_default","noValidate","Grid","container","item","xs","sm","TextField","autoComplete","name","fullWidth","id","label","autoFocus","onChange","required","bgcolor","Box","borderRadius","p","m","Button","onClick","justify","mt","commons_Copyright","Component","withStyles","connect","SignInSuccessful","Main","react_router_dom","path","SignInSucessful","Boolean","window","location","hostname","match","destination","document","getElementById","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","components_Main","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29964516.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nexport const CREATE_USER = \"CREATE_USER\";\nexport const CREATE_USER_SUCCEEDED = \"CREATE_USER_SUCCEEDED\";\nexport const CREATE_USER_FAILED = \"CREATE_USER_FAILED\";\nexport const ON_FIRSTNAME_BLUR = \"ON_FIRSTNAME_BLUR\";\nexport const ON_LASTNAME_BLUR = \"ON_LASTNAME_BLUR\";\nexport const ON_USERNAME_BLUR = \"ON_USERNAME_BLUR\";\nexport const ON_PASSWORD_BLUR = \"ON_PASSWORD_BLUR\";\nexport const ON_CONFIRMPASSWORD_BLUR = \"ON_CONFIRMPASSWORD_BLUR\";\n\n\nconst API_BASE_URL = 'http://localhost:8082';\n\nconst axiosClient = axios.create({\n\tbaseURL: API_BASE_URL,\n\theaders: {\n\t\t'Content-Type': 'application/json',\n\t},\n});\n\n\n\nexport function createUser(user){\n\treturn{\n\t\ttype: CREATE_USER,\n\t\tpayload: user,\n\t};\n}\n\n\nexport function createUserSucceeded(user){\n\treturn{\n\t\ttype: CREATE_USER_SUCCEEDED,\n\t\tpayload: user,\n\t};\n}\n\n\nexport function createUserFailed(user, error){\n\treturn{\n\t\ttype: CREATE_USER_FAILED,\n\t\tpayload: {user, error}\n\t};\n}\n\nexport function createNewUser(user){\n\n\treturn dispatch => {\n\t\taxiosClient.post(API_BASE_URL + \"/signin\", user)\n\t\t\t.then(resp =>{\n\t\t\t\tdispatch(createUserSucceeded(resp.data));\n\t\t\t}).catch(error => {\n    \t\t\tdispatch(createUserFailed(user, error.response));\n\t\t\t});\n\t}\n\n}\n\n\n\nexport function onFirstNameChange(firstName){\n\t\n\treturn{\n\t\ttype: ON_FIRSTNAME_BLUR,\n\t\tpayload: {firstName: firstName},\n\t};\n}\n\n\nexport function onLastNameChange(lastName){\n\treturn{\n\t\ttype: ON_LASTNAME_BLUR,\n\t\tpayload: {lastName: lastName},\n\t};\n}\n\n\nexport function onUserNameChange(userName){\n\treturn{\n\t\ttype: ON_USERNAME_BLUR,\n\t\tpayload: {userName: userName},\n\t};\n}\n\nexport function onPasswordChange(password){\n\treturn{\n\t\ttype: ON_PASSWORD_BLUR,\n\t\tpayload: {password: password},\n\t};\n}\n\n\nexport function onConfirmPasswordChange(confirmPassword){\n\treturn{\n\t\ttype: ON_CONFIRMPASSWORD_BLUR,\n\t\tpayload: {confirmPassword: confirmPassword},\n\t};\n}\n\n\n\n\n\n\n","import {\n\t\tCREATE_USER_SUCCEEDED, \n\t\tCREATE_USER_FAILED, \n\t\tON_FIRSTNAME_BLUR,\n\t\tON_LASTNAME_BLUR,\n\t\tON_USERNAME_BLUR,\n\t\tON_PASSWORD_BLUR,\n\t\tON_CONFIRMPASSWORD_BLUR\n\n\t} from '../actions/login-actions';\n\n\nfunction loginReducer(state, action){\n\t\n\tif(state === undefined){\n\n\t\treturn { \n\t\t\tstatusCode: null,\n\t\t\tuser: {\n\t\t\t\tusername: '',\n\t\t\t\tpassword: '',\n\t\t\t\tfirstname: '',\n\t\t\t\tlastname: '',\n\t\t\t\tconfirmPassword: ''\n\t\t\t},\n\t\t\terrors: {\n\t\t\t\terrorCount: 0,\n\t\t\t\terrors: []\n\t\t\t}\n\t\t};\n\n\t}\n\n\tvar {payload} = action;\n\n\tswitch(action.type){\n\t\n\t\tcase CREATE_USER_SUCCEEDED:\n\t\t\treturn { \n\t\t\t\tstatusCode: payload.status,\n\t\t\t\tuser: {\n\t\t\t\t\tusername: payload.username,\n\t\t\t\t\tfirstname: payload.firstname,\n\t\t\t\t\tlastname: payload.lastname,\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tconfirmPassword: ''\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\terrorCount: 0,\n\t\t\t\t\terrors: [\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tcase CREATE_USER_FAILED:\n\n\t\t\treturn { \n\t\t\t\tstatusCode: payload.error.status,\n\t\t\t\tuser: {\n\t\t\t\t\tusername: payload.user.username,\n\t\t\t\t\tpassword: '',\n\t\t\t\t\tfirstname: payload.user.firstname,\n\t\t\t\t\tlastname: payload.user.lastname,\n\t\t\t\t\tconfirmPassword: '',\n\t\t\t\t},\n\t\t\t\terrors: {\n\t\t\t\t\terrorCount: payload.error.data.errors.length,\n\t\t\t\t\terrors: payload.error.data.errors.map(e => { return {\n\t\t\t                    code: e.code,\n\t\t\t                    message: e.defaultMessage,\n\t\t\t                    field: e.field\n                    \n             \t\t\t\t}})\n\t\t\t\t}\n\t\t\t};\n\n\t\t\n\t\tcase ON_FIRSTNAME_BLUR:\n\t\t\n\t\t\treturn \t{\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tfirstname: payload.firstName\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tcase ON_LASTNAME_BLUR:\n\n\t\t\treturn \t{\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tlastname: payload.lastName\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tcase ON_USERNAME_BLUR:\n\n\t\t\treturn \t{\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tusername: payload.userName\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tcase ON_PASSWORD_BLUR:\n\n\t\t\treturn \t{\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tpassword: payload.password\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tcase ON_CONFIRMPASSWORD_BLUR:\t\n\n\t\t\treturn \t{\n\t\t\t\t...state,\n\t\t\t\tuser: {\n\t\t\t\t\t...state.user,\n\t\t\t\t\tconfirmPassword: payload.confirmPassword\n\t\t\t\t}\n\t\t\t};\t\n\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n\n}\n\nexport default loginReducer;","\n    const singInStyles = theme => ({\n      '@global': {\n        body: {\n          backgroundColor: theme.palette.common.red,\n        },\n      },\n      paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n      },\n      avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n      },\n      form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n      },\n      submit: {\n        margin: theme.spacing(3, 0, 2),\n      },\n    });\n\n  export { singInStyles };","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n\nconst Copyright = () =>{\n   return (\n      <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n        {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          FacturaChida.com\n        </Link>{' '}\n        {new Date().getFullYear()}\n        {'.'}\n      </Typography>\n  );\n}\n\n\n\nexport default Copyright;","\n\nexport function containsErrorOnField(errors, field){\n\treturn (errors.errors.map((error) =>  error.field)).indexOf(field) >= 0\n}\n\n\nexport function passwordsMatchError(errors){\n\treturn (errors.errors.map((error) =>  error.code)).indexOf(\"MatchPasswords\") >= 0\n}\n\n\n","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { singInStyles } from '../commons/styles';\nimport Copyright from \"../commons/Copyright\";\nimport {  createNewUser,\n          onFirstNameChange,\n          onLastNameChange,\n          onUserNameChange,\n          onPasswordChange,\n          onConfirmPasswordChange} from \"../../actions/login-actions\";\n\nimport {containsErrorOnField, passwordsMatchError }from \"../../utils/utils\"\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass SignIn extends Component{\n\n\n  onCreateUser = (e) =>{\n    e.preventDefault(); \n    this.props.dispatch(createNewUser(this.props.user));\n  }\n\n\n  onFirstNameBlur = (e) => {\n    this.props.dispatch(onFirstNameChange(e.target.value));\n  }\n\n  onLastNameBlur = (e) => {\n    this.props.dispatch(onLastNameChange(e.target.value));\n  }\n\n  onUserNameBlur = (e) => {\n    this.props.dispatch(onUserNameChange(e.target.value));\n  }\n\n  onPasswordBlur = (e) => {\n     this.props.dispatch(onPasswordChange(e.target.value));\n  }\n\n  onConfirmPasswordBlur = (e) => {\n    this.props.dispatch(onConfirmPasswordChange(e.target.value));\n  }\n\n  renderRedirect = () => {\n    if (this.props.statusCode === 200) {\n      return <Redirect to='/signinsucess' />\n    }\n  }\n\n\n  render(){\n\n    const { classes } = this.props;\n\n    return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n         Enter your information to create a new account. \n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"standard\"\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                onChange={this.onFirstNameBlur}\n                value={this.props.user.firstname}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"standard\" \n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n                onChange={this.onLastNameBlur}\n                value={this.props.user.lastname}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                onChange={this.onUserNameBlur}\n                value={this.props.user.username}\n                error={this.props.errors &&  containsErrorOnField( this.props.errors, \"username\")}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                onChange={this.onPasswordBlur}\n                value={this.props.user.password}\n                error={\n                  this.props.errors &&  \n                  (containsErrorOnField( this.props.errors, \"password\") ||  passwordsMatchError(this.props.errors))\n                }\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"standard\"\n                required\n                fullWidth\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                id=\"confirm\"\n                onChange={this.onConfirmPasswordBlur}\n                value={this.props.user.confirmPassword}\n                error={this.props.errors &&  passwordsMatchError(this.props.errors)}\n              />\n            </Grid>\n             \n             <Grid item xs={12} bgcolor=\"error.main\" >\n                <Typography \n                  component=\"p\" \n                  variant=\"body2\"\n                  color=\"error\">\n                  \n                  <Box borderRadius=\"borderRadius\"  color=\"error.main\" p={1} m={1} >\n                    {this.props.errors && \n                        <ul>\n                          {this.props.errors.errors.map((error) =>  <li> {error.message} </li> )}\n                        </ul>\n                    }\n                  </Box>\n                </Typography>\n             </Grid>\n          </Grid>\n          {this.renderRedirect()}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={(e) => this.onCreateUser(e)}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"#\" variant=\"body2\">\n                Already have an account? Sign in \n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default  withStyles(singInStyles)(SignIn);","import {connect} from \"react-redux\";\nimport SignIn from \"../base/SignIn\"\n\n\nfunction mapStateToProps(state){\n\treturn {\n\t\tstatusCode : state.statusCode,\n\t\tuser: state.user,\n\t\terrors: state.errors\n\t};\n}\n\n\n\nexport default connect(mapStateToProps)(SignIn);","import React, {Component} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { singInStyles } from '../commons/styles';\nimport Copyright from \"../commons/Copyright\";\n\n\n\nclass SignInSuccessful extends Component{\n\n\n  render(){\n\n    const { classes } = this.props;\n\n\n\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n           One last step. Your account is almost created. You just need to validate your e-mail.\n          </Typography>\n          \n\n\n        </div>\n        <Box mt={5}>\n          <Copyright />\n        </Box>\n      </Container>\n  );\n  }\n\n}\n\nSignInSuccessful.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(singInStyles)(SignInSuccessful);","import React, {Component} from \"react\";\n\nimport {Route, Switch, BrowserRouter} from \"react-router-dom\";\nimport SignIn from \"./connected/SignInHOC\";\nimport SignInSucessful from \"./base/SignInSuccessful\";\nimport Container from '@material-ui/core/Container';\n\n\nclass Main extends Component{\n\n\n\trender(){\n\t\treturn(\n\t\t\t<BrowserRouter>\n\t\t\t\t<Switch>\n\t\t\t  \t\t<Container component=\"main\" maxWidth=\"xs\">\n\t\t\t  \t\t\t<Route path=\"/signin\" component={SignIn}/>\n\t\t\t  \t\t\t<Route path=\"/signinsucess\" component={SignInSucessful}/>\n\t\t\t  \t\t</Container>\n\t\t\t\t</Switch>\n\t\t\t</BrowserRouter>\n\t\t);\n\t}\n\n}\n\n\nexport default Main;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware } from 'redux';\nimport {Provider} from 'react-redux';\nimport loginReducer from './reducers/login-reducer';\nimport './index.css';\nimport 'typeface-roboto';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools} from 'redux-devtools-extension';\n\n\nimport Main from \"./components/Main\"\n\nimport * as serviceWorker from './serviceWorker';\n\nvar destination = document.getElementById('root');\n\nvar store = createStore(\n\t\tloginReducer,\n\t\tcomposeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(<Provider store={store}>\n\t\t\t\t\t<Main />\n\t\t\t\t</Provider>,\n\t\t\t\tdestination);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n//http://localhost:8082"],"sourceRoot":""}